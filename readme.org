#+TITLE: Doom Setup and configuration

* Installation
** Install Emacs
*** Linux (Debian)
#+begin_src bash
# install emacs from snap
sudo apt install snapd -y
sudo snap install emacs --classic
#+end_src

** Install Doom Emacs
#+begin_src bash
# Clone Doom Emacs
rm -rf ~/.emacs.d
git clone --depth 1 https://github.com/hlissner/doom-emacs ~/.emacs.d

# Clone config
cd ~
# remove the existing doom configuration file if already present
rm -rf ~/.doom.d
git clone git@github.com:bipinmdr07/.doom.d.git # recommended for me
# OR
git clone https://github.com/bipinmdr07/.doom.d.git

~/.emacs.d/bin/doom install
#+end_src

* Installing dependencies
First run the doom emacs `doctor` command and install missing dependencies manually as suggested.
#+begin_src bash
~/.emacs.d/bin/doom doctor
#+end_src

* LSP (Language Server Protocol)
Have to install Deno for js-ts-lsp site can be found here at [[https://deno.land/#installation][Dano installation page]]
#+begin_src bash
curl -fsSL https://deno.land/x/install/install.sh | sh
#+end_src

* Setting up Magit Forge
1. First create a `Personal access token` by going to `setting` and `Developer setting` on with name
   #+begin_src bash
   {{username}}^forge // bipinmdr07^forge
   #+end_src
2. Configure the `github.name` to register a username for forge by running
   #+begin_src bash
   git config --global github.user {{username}}

   # example
   git config --global github.user bipinmdr07
   #+end_src
3. create a `.authinfo` file with content
   #+begin_src bash
   machine api.github.com login {{username}}^forge password {{personal_access_token}}
   #+end_src
4. encrypt the `.authinfo` file to `.authinfo.gpg` with password by running
   #+begin_src bash
   M-x epa-encrypt-file
   #+end_src
   and select the `.authinfo` file

* Setting up dap-mode
** Firefox
1. Download debug tool from vscode marketplace.
   #+begin_src text
    https://marketplace.visualstudio.com/items?itemName=firefox-devtools.vscode-firefox-debug
   #+end_src
2. Unzip the file to specific location.
   #+begin_src bash
    mkdir -p ~/.emacs.d/.extension/vscode/firefox-devtools
    unzip ~/Downloads/firefox-devtools.vscode-firefox-debug-2.9.10.vsix -d ~/.emacs.d/.extension/vscode/firefox-devtools
   #+end_src
3. Test if debug tool is working by running `M-x: dap-debug`.

** Google Chrome
1. Download debug tool from vscode market place.
   #+begin_src text
    https://marketplace.visualstudio.com/items?itemName=msjsdiag.debugger-for-chrome
   #+end_src
2. Unzip the file to specific location.
   #+begin_src bash
    mkdir -p ~/.emacs.d/.extension/vscode/chrome-debug
    unzip ~/Downloads/msjsdiag.debugger-for-chrome-4.13.0.vsix -d ~/.emacs.d/.extension/vscode/chrome-debug
   #+end_src
3. Test if debug tool is working by running `M-x: dap-debug`
